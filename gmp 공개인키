#inculde <iostream>
#include <gmpxx.h>

mpz_class powm(mpz_class base, mpz_class exp, mpz_class mod);
mpz_class urandomn(gmp_randstate_t state, const mpz_class n);
int cmp(mpz_class A, mpz_class B);

mpz_class powm(mpz_class base, mpz_class exp, mpz_class mod){
   mpz_class r;
   mpz_powm(r.get_mpz_t(), base.get_mpz_t(), exp.get_mpz_t(), mod.get_mpz_t());
   return r;
}
mpz_class urandomn(gmp_randstate_t state, const mpz_class n({
    mpz_class r;
    mpz_urandomn(r.get_mpz_t(), state, n.get_mpz_t());
    return r;
}
int cmp(mpz_class A, mpz_class B){
    int r;
    r=mpz_cmp(A.get_mpz_t(), B.get_mpz_t());
    return r;
}

int main(){
   mpz_class A;
   mpz_class B:
   mpz_class pubA;
   mpz_class pubB;
   mpz_class kA;
   mpz_clas kB;
   
   mpz_class={"0x------"};
   mpz_class g=2;
   
   xA=urandomn(state, P);
   pubA=powm(g, xA,p); //지수승실시
   
   xB=urandomn(state, p);
   pubB=powm(g, xB, p);
   
   kA=powm(pubB, xA, p);
   kB=powm(pubA, xB, p);
   
   if(cmp(kA,kB)==0){
      cout << "성공" << endl; }
   else 
     cout << "실패" << endl;
   return 0;
 }
